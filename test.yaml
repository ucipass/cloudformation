Description: ASAv 9.13 Instance
Parameters:
  EnvironmentName:
    Description: AAn environment name that will be prefixed to resource names
    Type: String
    Default: AACF
  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 172.30.0.0/16
  PublicSubnet1CIDR:
    Description: >-
      Please enter the IP range (CIDR notation) for the public subnet in the
      first Availability Zone
    Type: String
    Default: 172.30.11.0/24
  PublicSubnet2CIDR:
    Description: >-
      Please enter the IP range (CIDR notation) for the public subnet in the
      first Availability Zone
    Type: String
    Default: 172.30.12.0/24
  PrivateSubnet1CIDR:
    Description: >-
      Please enter the IP range (CIDR notation) for the private subnet in the
      second Availability Zone
    Type: String
    Default: 172.30.21.0/24
  Password:
    Description: Please enter the Enable and Terminal password
    Type: String
    Default: cisco
  myKeyPair:
    Description: Amazon EC2 Key Pair
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: AA-TEST
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: m4.xlarge
    AllowedValues:
      - m4.large
      - m4.xlarge
Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-0c847ec15a09e65c5
    us-east-2:
      AMI: ami-0bc000234a7a43e52
    us-west-1:
      AMI: ami-09041ae21d57240c4
    us-west-2:
      AMI: ami-05b12b5937a68ff21
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock:
        Ref: VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value:
            Ref: EnvironmentName
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value:
            Ref: EnvironmentName
  InternetGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId:
        Ref: InternetGateway
      VpcId:
        Ref: VPC
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
        'Fn::Select':
          - 0
          - 'Fn::GetAZs': ''
      CidrBlock:
        Ref: PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Private Subnet (AZ1)
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
        'Fn::Select':
          - 0
          - 'Fn::GetAZs': ''
      CidrBlock:
        Ref: PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Public Subnet1 (AZ1)
  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
        'Fn::Select':
          - 0
          - 'Fn::GetAZs': ''
      CidrBlock:
        Ref: PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Public Subnet2 (AZ1)
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: Public Routes
  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: Private Routes
  DefaultPublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet1
  PublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet2
  PrivateSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: PrivateSubnet1
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      Tags:
        - Key: Name
          Value: SG
      VpcId:
        Ref: VPC
      GroupDescription: Enable ALL
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
  NetworkInterface0:
    Type: 'AWS::EC2::NetworkInterface'
    # DependsOn: InstanceSecurityGroup
    Properties:
      Tags:
        - Key: Name
          Value: ASAv eth0
      Description: ASAv eth0
      SourceDestCheck: 'false'
      # GroupSet:
        # - Ref: InstanceSecurityGroup
      PrivateIpAddress: 172.30.11.11
      SubnetId:
        Ref: PublicSubnet1

  NetworkInterface1:
    Type: 'AWS::EC2::NetworkInterface'
    # DependsOn: InstanceSecurityGroup
    Properties:
      Tags:
        - Key: Name
          Value: ASAv eth1
      Description: ASAv eth1
      SourceDestCheck: 'false'
      # GroupSet:
        # - Ref: InstanceSecurityGroup
      PrivateIpAddress: 172.30.12.12
      SubnetId:
        Ref: PublicSubnet2
      
  # PublicIPAddress0:
  #   Type: AWS::EC2::EIP   
  #   Properties:
  #     Tags:
  #       - Key: Name
  #         Value: PublicIP0

  # EIPAssociation0:          
  #   Type: AWS::EC2::EIPAssociation
  #   Properties: 
  #     EIP: eipalloc-0a72ae093bd48b4be
  #     NetworkInterfaceId: eni-0c6318959b0e91cf0
  #     PrivateIpAddress: 172.30.11.11


  # NetworkInterfaceGIG0:
  #   Type: 'AWS::EC2::NetworkInterface'
    # DependsOn: InstanceSecurityGroup
    # Properties:
    #   Tags:
    #     - Key: Name
    #       Value: ASAv GIG0
    #   Description: ASAv GIG0
      # SourceDestCheck: 'false'
      # GroupSet:
        # - Ref: InstanceSecurityGroup
      # SubnetId:
      #   Ref: PublicSubnet2
  # NetworkInterfaceGIG1:
    # Type: 'AWS::EC2::NetworkInterface'
    # DependsOn: InstanceSecurityGroup
    # Properties:
    #   Tags:
    #     - Key: Name
    #       Value: ASAv GIG1
    #   Description: ASAv GIG1
      # SourceDestCheck: 'false'
      # GroupSet:
      #   - Ref: InstanceSecurityGroup
      # SubnetId:
      #   Ref: PrivateSubnet1
  # PublicIPAddress:
  #   Type: AWS::EC2::EIP          



  # ASAvInstance1:
  #   Type: 'AWS::EC2::Instance'
  #   DependsOn: 
  #     - NetworkInterfaceGIG0
  #     - NetworkInterfaceGIG1
  #   Properties:
  #     ImageId:
  #       'Fn::FindInMap':
  #         - RegionMap
  #         - Ref: 'AWS::Region'
  #         - AMI
  #     InstanceType:
  #       Ref: InstanceType
  #     KeyName:
  #       Ref: myKeyPair
  #     NetworkInterfaces:
  #       - NetworkInterfaceId: 
  #           Ref: NetworkInterfaceGIG0
  #         DeviceIndex: 0
  #       - NetworkInterfaceId: 
  #           Ref: NetworkInterfaceGIG1
  #         DeviceIndex: 1        
  #     # SubnetId:
  #     #   Ref: PublicSubnet1
  #     SecurityGroupIds:
  #       - Ref: InstanceSecurityGroup
  #     UserData:
  #       'Fn::Base64':
  #         'Fn::Sub':
  #           - |
  #             ! required config start
  #             ! ASA Version 9.10.1.11
  #             interface management0/0
  #             description \${Password1}
  #             management-only
  #             nameif management
  #             security-level 100
  #             ip address dhcp setroute
  #             no shut
  #             !
  #             same-security-traffic permit inter-interface
  #             same-security-traffic permit intra-interface
  #             !
  #             crypto key generate rsa modulus 2048 noconfirm
  #             ssh version 2
  #             ssh key-exchange group dh-group14-sha1
  #             ssh 0 0 management
  #             ssh timeout 30
  #             aaa authentication ssh console LOCAL
  #             username admin password admin privilege 15
  #             username cisco ${Password1} cisco privilege 15
  #             username admin attributes
  #             service-type admin
  #             ! required config end
  #           - Password1: cisco123
  #     Tags:
  #       - Key: Name
  #         Value:
  #           'Fn::Sub': '\${EnvironmentName}'




  # EIPAssociation1:          
  #   Type: AWS::EC2::EIPAssociation
  #   Properties: 
  #     EIP:
  #       Ref: PublicIPAddress
  #     NetworkInterfaceId: eni-018f655f28ab040ce
  #     PrivateIpAddress: 172.30.12.49
      


        # Ref: NetworkInterfaceGIG0
      # AllocationId: String
      # InstanceId: i-0f509e53557e85f3a
        # Ref: ASAvInstance1
      # PrivateIpAddress: String  





  # NetworkInterfaceAttachment1:
  #   Type: 'AWS::EC2::NetworkInterfaceAttachment'
  #   DependsOn: ASAvInstance1
  #   Properties:
  #     InstanceId:
  #       Ref: ASAvInstance1
  #     NetworkInterfaceId:
  #       Ref: NetworkInterfaceGIG0
  #     DeviceIndex: 1
  # NetworkInterfaceAttachment2:
  #   Type: 'AWS::EC2::NetworkInterfaceAttachment'
  #   DependsOn: ASAvInstance1
  #   Properties:
  #     InstanceId:
  #       Ref: ASAvInstance1
  #     NetworkInterfaceId:
  #       Ref: NetworkInterfaceGIG1
  #     DeviceIndex: 2
  # ASAvInstance1:
  #   Type: 'AWS::EC2::Instance'
  #   DependsOn: 
  #     - NetworkInterfaceGIG0
  #     - NetworkInterfaceGIG1
  #   Properties:
  #     ImageId:
  #       'Fn::FindInMap':
  #         - RegionMap
  #         - Ref: 'AWS::Region'
  #         - AMI
  #     InstanceType:
  #       Ref: InstanceType
  #     KeyName:
  #       Ref: myKeyPair
  #     SubnetId:
  #       Ref: PublicSubnet1
  #     SecurityGroupIds:
  #       - Ref: InstanceSecurityGroup
  #     UserData:
  #       'Fn::Base64':
  #         'Fn::Sub':
  #           - |
  #             ! required config start
  #             ! ASA Version 9.10.1.11
  #             interface management0/0
  #             description \${Password1}
  #             management-only
  #             nameif management
  #             security-level 100
  #             ip address dhcp setroute
  #             no shut
  #             !
  #             same-security-traffic permit inter-interface
  #             same-security-traffic permit intra-interface
  #             !
  #             crypto key generate rsa modulus 2048 noconfirm
  #             ssh version 2
  #             ssh key-exchange group dh-group14-sha1
  #             ssh 0 0 management
  #             ssh timeout 30
  #             aaa authentication ssh console LOCAL
  #             username admin password admin privilege 15
  #             username cisco ${Password1} cisco privilege 15
  #             username admin attributes
  #             service-type admin
  #             ! required config end
  #           - Password1: cisco123
  #     Tags:
  #       - Key: Name
  #         Value:
  #           'Fn::Sub': '\${EnvironmentName}'



  # EIPAssociation1:          
  #   Type: AWS::EC2::EIPAssociation
  #   Properties: 
  #     EIP:
  #       Ref: PublicIPAddress
  #     NetworkInterfaceId: eni-018f655f28ab040ce
  #       # Ref: NetworkInterfaceGIG0
  #     # AllocationId: String
  #     # InstanceId: i-045becb93fe479731
  #       # Ref: ASAvInstance1
  #     # PrivateIpAddress: String  


  # NetworkInterfaceGIG1: eni-0de39f84372ac4dab
  # Description: NetworkInterfaceGIG1
  # NetworkInterfaceGIG0: eni-018f655f28ab040ce
  # Description: NetworkInterfaceGIG0
  # instance i-045becb93fe479731

# Outputs:
  # InstanceIPAddress:
  #   Description: IP address of the newly created EC2 instance
  #   Value: 
  #     Ref: PublicIPAddress
  # NetworkInterfaceGIG0:
  #   Description: NetworkInterfaceGIG0
  #   Value: 
  #     Ref: NetworkInterfaceGIG0
  # NetworkInterfaceGIG1:
  #   Description: NetworkInterfaceGIG1
  #   Value: 
  #     Ref: NetworkInterfaceGIG1
  # ASAvInstance1:
  #   Description: ASAvInstance1
  #   Value: 
  #     Ref: ASAvInstance1      